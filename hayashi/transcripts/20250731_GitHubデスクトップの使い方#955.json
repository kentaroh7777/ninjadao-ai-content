{
  "transcript": "はいおはようございます林です 技術とお金の専門家の fp が他に はトレンドについて毎日深掘りしていく 番組を林ラジを始めてまいります 本日もですね朝6時からのシャック363 からバトンを渡したきましてありがとうございます コメントはですねディスコードの朝も夜もの チャンネルの方にお気軽に入れて いただけましたら幸いですはいそれでは 始めてまいりましょうよろしくお願い いたします はいではさっそく ですけれども右 から2番目のピン止めですね ぶっちさんから オンラインの cnp トレカの大会ですね 忘れ去られたカップ すごい名前だな毎回思いますけど入ってる が8月11日に開催される予定なんです けれどもこちらのですね募集が残り3名 枠ということで 参加しようかなと思ってた方は早めにね ご参加ください僕の方からもですねあの 抽選になるんですけれどもレーキカード レアのレーキカードですねこちらのご 提供をさせて頂いておりますのでぜひね 楽しみにしててください はいえっと僕は 参加はちょっとできないんですけれども 皆さんで楽しんでくださいせっかくね えっと物産企画してくださってますので あの8月のね16日に向けてあの なんだチャンピオンシップの全国大会とそれ から第2弾ですね発売が8月16日にあるんです けれどもそのもう1週間切っている ところですよね11日ってなのでここでね ちょっと 前哨戦みたいな感じで盛り上げを作って いけるといいなというふうに思います ぶっちさんありがとうございます はいそれから左から2番目ですねこちらも しぬぴートレカなんですけれども 出雲さんのノートが更新されております もうだいぶねなんかそのシリーズ化して きた感じがありますけれども今回の話は ですねあのなんとなんとしぬぴートレカのね 売り上げ を一定割合ですね社会貢献あの今回はその 学童ですかねの新しい取り組みちょっと 変わった取り組みをされている ところにしぬぴートレカの売り上げを 貢献しますよと っていうふうな 座組を始めますというふうなところでいや すごいですよね だから僕たちはそのボックス買ったり カートン買ったりでカードね大会で 楽しんだりするんですけども僕たちだけ じゃなくてそういうその社会のあの特に 子供たちですよねであの いるもさも書かれてますけどもこれはその単に そのなんだろうな 社会貢献 だけを目的にするんじゃなくてとしぬぴー トレカのその成長あの長期的な成長ですね 子供たちに投資をするっていうのは当然 ながらその おもちゃっていうかあの 玩具ですからねあのトレーニングカード ってのはそういったものに8興味関心を 引けるという意味では プロモーションにもなっているというふう なところですねあのなのでここは あのそう僕も読んでてあの素晴らしい 打ち手かなというふうに思いましたので ぜひねであの僕たちは何もする必要がない っていうところまたいいですよね あの買うだけ買ったら自動的にそういった 光景のところにお金が回っていきます よっていうことですのでまぁぜひねあの いつもの厚い感じであのノート作成されて おりますぜひねひすもさんのノートをご覧 ください テスト例から一番左ですねこちら ai の話ですよこれねちょっとずいぶん前 なあのポストで恐縮なんですけども多分 あの 拾えてない方もいらっしゃるのかなという ふうに思いますので拾っておきましたあの 普通にチートシートとして使えると思います あの えっとまぁ前から僕が言ってる内容も 含まれていますので知ってる方も多いと 思うんですけれどもまあ細かいところまで 含めてしっかりまとまっているなぁと思った のでご紹介させていただきました こういったことをするとそのカーソル っていうかまあカーソルもそうですベース コードもそうですしあとはその他のね バイブコーディングツールでもあのこう いったルールを事前に定義しておいて ちゃんと ai に指示をしていることによって あのだいぶ動きがあのスムーズになって いくと思いますまあこれをやったら完璧 っていうところまでは残念ながらいか ないんですけれども あの ターンし単純になってからバイブしている 時に本当にまあバイブってノリですから あのノリだけでやっちゃうとなかなかうまく いかないことって多いんですよね なのでちょっとガチで作りたいという時は こういったルールも参考にしてください っていうふうなところですかね はいあのご存知のルールことも多いかな というふうに思うんですけどね特にバイブ コーディングだいぶされている方はあー 知ってる知ってるってことも多いと思う けども ただ細かいところですねあの ああこんなのもあるんだっていうふうにね あの木 気づきがあればいいなというふうに思い ます うん まあだいたい言ってますね実践計画立てる とかね他設計作りなさいとか言ってますし カーソルかカーソルルールの活用カーソル ルールもありますね確かに それから8 段階的開発 そうですねあーこれは td ですねあの テストドリブンデベルプメントってこれ 随分昔からある方法なんですけどもこれが 前から僕も言ってたかなと思うけどテスト 結構大事なんですねであの人間がコードを 作る場合は特にプロが作る場合はえっと まあそもそもが高い品質で作ってくるって いうことが多いですのであんまりテスト ってね重要視されないこともあるんですよ まあ驚くべきことにテストがない現場 っていうのもあります まあまだそういうところもあるんです けども特に ai っていうのは品質の低い 行動を上げてきますのでこのテストが めちゃくちゃ大事なんですね テストさせて ei にあすいません間違って ましたっていうことを自動的に認識させる っていうことがすごく大事ですしあの テストを作っておかないと ai って1回 作ったものを中余計に編集することって ありません あれなんでそこが変わってるのって いうことがしばしば発生するんですけども そういうことをするとテストが通らなく なりますのであすいませんそこ間違って ましたって言って自動的に修正してくれる っていう形になりますのでテスト めちゃくちゃ大事なんですね特に なんか今のバイブコーディング とか ai 駆動開発においてはテスト は本当に重要だと思いますし多分 このテストの重要性っていうのが 今後多くの人に認識されていく と思いますだからどっちかっていう ともう設計書とテストを作るのが テストもね ai が開発してくれるん でそのテストの設計ですねテスト を含めた設計っていうのが人間の まず第一アウトプットになって いくのかなというふうには思います ね設計もaiに作らせるんですけど ねということでそこをどうやって 指導していくかどうやってその ai をハンドリングしていくかっていう ところが腕の見せ所みたいなところ はありますかねそんなところでございます じゃあちょっと今日の本題に入って いきたいと思うんですけど今日は ちょっとですねちょっとプチセミナー みたいな感じになるかなと思うん ですけどもはいあのあでそうそう えっと6さんからですね多分これは フリーだと思うんですけどもあの 寝れてないなぁということでね で早さんはちょっと睡眠時間足りない とさんさんに怒られるっておっしゃ ってたんでえっとご期待に添え ご期待にを終えてそう添えてなんて 言うんすかあのちょっと睡眠の話 をしていきたいかなと思うんですけ どもあのまあ7時間睡眠しなさい ってよく言われますねで7時間睡眠 7時間未満例えば6時間半とか6時間 だとどういう風になるかっていう とあのざっくり言うといろいろ あって健康リスクが結構大きい あの免疫力低下ですとか記憶力 低下で体重が増加する心臓病の リスク高血圧うつ病糖尿病ローカー 加速しますみたいなリスクが上昇 しますよとまあこれもうんと間違い なく言えると思いますね医学的 にであのよくある反応としては 私はショートスリーパーですみたい な話があるんですけれどもえっと ねショートスリーパーで確かに 医学的には認められててただ出現 率が非常に低くてですね0.004パーセント と言われていますまあこれはあの そうですね10万人に数名ぐらい な感じですかねうんなのであの まあいいやまあそれぐらいです なのでえっとまあその可能性は なくはないゼロではないんですけ れどもあのそこにかけるっていう のはお勧めはしないですね例えば 自分がショートスリーパーでない にもかかわらずショートスリープ をしている時の健康被害偏向リスク はめちゃくちゃ高いけれども実際 に自分はショートスリーパーなんだ けれどもしっかり7時間寝るっていう 時のリスクはほぼないんですね というか科学的には認められて ないっていうふうに言われてます のでえっとだから基本的には自分 はショートスリーパーではない っていうふうに思って行動した ほうがいいってことです実際ショート スリーパーかもしれないですけど ねということになりますねはい ですので7時間でくださいはい てくさんわかりましたはいということで 別にそう強制はねもちろんしません けれどもこういう医学的な科学 的な根拠があるというところは ご承知おきいただいておくといいん じゃないかなというふうに思います はいということで今日の本題に 改めて入っていきますけれども 今日GitHub Desktopっていう話をしたい と思いますGitHubどっちが正式なん ですかちょっと分かんないですけど GitHubでいきましょうかGitHubなんです けれどもバイブコーディングを されている方はおなじみですね GitHubはねでされてない方はなん じゃそれっていう話なんですけ れども要は共通のファイル置き場 です履歴を管理できる履歴を管理 できるっていうことはどういうこと かっていうとゲームで言ったら セービングポイントをいっぱい 置けるっていう自由に置けるって 感じですねここセーブしておきます この状態でセーブしておきます っていうのを自由に何回でもできる そういう機能付きの共通のファイル 置き場っていうふうに思っていただ いたらいいかなというふうに思います でですね昨日お話をしたんですけ れども文字起こしファイルですね 音声のをこのGitHubに置けばいいん じゃないですかっていう提案ちょっと させていただきました最終的に 別にGitHubじゃなくてもいいと全然 思うんですけどもただどんな方法 であれ文字起こしファイルを何か の形でシェアしておくみんなで 使えるようにする特にAIに近い ところですねAIがすぐパッと読み 込める場所に置くっていうのが 大事だと僕は思ってますのでローカル パソコンとかのローカルにファイル として置くっていうのが大事かな というふうに思いますなのでそれ だとGitHubかGoogleドライブとかなん とかクラウド系のドライブサービス ですねかどっちかになるかなという ふうに思いますねとりあえず今は GitHubを提案中ということですね ここのメリットなんですけども 昨日あんまりお伝えできなかった かなと思うので改めてお伝えして おくと配信者側のメリットですね これはやっぱり音声って届きにくい と思うんですよ実際に聞かない といけないのでこうやって皆さん 聞いてくださっているのは非常 にありがたいんですけどもでも 言って僕の配信だと数十人三十 人四十人多いときは五六十人とか いくときあるんですけども通話 三十人ぐらいですね逆に言うと それ以外の人にはほとんど届かない っていう状況になりますなので 文字起こししてテキストにする テキストにするとそれをちょっと でも読んでくれた人には少しでも 届きますんでね音声っていうのは ちょっとだけ聞くっていうのは なかなか難しいじゃないですか なのでテキスト化するっていう のはだいぶ大事なんだけれども 全員分の文字起こしをみんなが 一人ずつ並列にやるとすっごい コストになりますよねだから共有 しましょうって話なんですよだから 共有するそうするとその配信者 のメリットとしては当然その情報 が届きやすくなります文字起こし するとね文字起こしをまとめて おくことによって自分自身も情報 発信しやすくなるんですよ過去 の自分が話した内容っていうの もすぐピックアップできるよう になりますんで自分何話してた かなっていうことは自分自身で 分かるようになるってことですね 共有なので他の人のテキストも 文字起こしファイルも手に入ります よねなのでそういった絡み例えば そうですねなかなかないと思うん ですけども他の人の中で自分言及 されているところがないかなっていう 検索もできるようになりますこれ 難しいですよね全部の音声を聞 いてれば記憶に残ってればできる かもしれないんですけども基本 無理だと思いますこれ無理ゲー だと思いますだけど文字起こし しておけばそこを検索すればヒット する可能性は出てきますんでいわゆる エゴサーチですね音声のエゴサーチ みたいなこともできるようになる というふうなところですねこれは すごく配信者にとってメリット 大きいと思います今回だからご 提案するのは仕組み化ができるん ですね仕組み化をすれば負担は 限りなく小さくなりますしちゃんと 作ればゼロにできます完全自動 で文字起こししたファイルが共有 までされるGitHubで共有までされる っていうところまで完全自動できます のでこれは本当に配信者忙しい 配信者さんにとっては大きなメリット かなというふうに思いますね当然 配信者のメリットの一部が受信者 のメリットになるんですけども 音声聞かなくてもちゃんと情報 把握できますよとか自分の欲しい 情報を検索したりあるいはAIに 読み込ませてまとめたりそういう ふうな理解しやすい形で情報を 受け取ることができるようになる というところが非常に大きなメリット かなと思いますということで配信者 も受信者も両方メリットがあります ので文字起こしファイルをこれを 共有しましょうGitHubで共有しましょう ってところですねただGitHub難しい と思っている方多いと思います ので今日はこのGitHubディスクトップ っていうのの話をしたいかなという ふうに思いますまずGitHubディスクトップ ちょっと待って環境を開くちょっと 今日は自分が手元で若干実演を しながらやっていきたいかなという ふうに思いますがWindows開きました Windows話します僕はMacなんですけど WindowsがあるのでWindowsにリモート デスクトップで入ってやっていき たいかなと思いますがまずGitHub デスクトップがちょっとダウンロード リンクを置かせていただきます こちら朝も夜ものほうに置いて みましたのでできたらもし目の前 にパソコンがある方も今やって いただいたらいいかなと思います これをインストールするということ ですねダウンロードしてインストール をしてみてくださいあんまり時間 ないのでインストールできたところ からご説明をしますとリポジトリ をクローンっていうことをします ちょっとこの辺りの言葉遣いとか 専門用語があって突きにくさが あるんですけども要はリポジトリ っていう共有のクラウド上の共有 場所があるんですあって特定の リポジトリ例えば僕が今回作った ものだったらNinterをAIコンテンツ っていう名前がついているリポジトリ がありますそのリポジトリをクローン ですから手元のコンピュータパソコン にダウンロードするというふう なイメージで捉えてもらったら いいと思いますただGitHubの場合 は単にダウンロードするんじゃなくて そこの同期ができるんですね例えば GitHubのクラウド上の情報が更新されたら プルかフェッチかフェッチっていう ボタンがありましてGitHubデスクトップ でフェッチってボタンポチって クリックしたら最新の情報に同期 されるとそんな感じですねなので 何だろうなダウンロードとGoogle ドライブでその同期を自動的に やってくれっていうのがGoogleドライブ なんですけどもダウンロードと Googleドライブの中間みたいな感じ ですかねそういう感じでコントロール しやすいんですすごくバージョン 管理とかのコントロールしやすい からソースコードを開発してる ときはみんなこれを使うっていう そういうことなんですねインストール できましたかできましたら最初に アプリを立ち上げていただいて GitHubにログインっていう状態になる と思いますこれをしていただく って感じですね最初はねGitHubに アカウントがないよって方はGitHub にアカウントを作ってみてください これはもう本当に簡単にできる と思います例えばGoogleのアカウント があったらGoogleアカウントでアカウント 作成できるんじゃなかったかな もうちょっとだいぶ前の話なんで 僕も忘れちゃいましたけどもこれは 誰でも簡単に無料でできますので 今すぐやってみてくださいでですね 立ち上げてログインしたらLet's Get Startedっていう画面になると思います さあ始めましょうっていう画面 ですねでそれがですねちょっと 最初からやってみましょうかまず 僕が追加したやつを削除してみ ました初期状態戻りましたねそう Let's Get Startedっていう画面になります ここの画面の右側にですねいろいろ ボタンみたいな欄があると思います このボタンの中にですね上から 2番目かなクローンアレポジトリ フロムズインターネットっていう のがありますクローンアレポジトリ フロムズインターネットですね このボタンをクリックしてください クローンですさっき言ったように クローンですねそうするとダイアログ が開くと思うんですけどもこの ダイアログの中で上ね三つのタブ になってるんですよよく見ると ちょっと分かりにくいんですけども このタブの一番右のURLってやつですね これをクリックしてみてください クリックしましたかクリックしました かねそうするとURLを入力する欄 が出てくると思うんですけども でリポジトリですねコンテンツ 置き場リポジトリちょっとリポジトリ ねURLも貼っ付けさせていただいた んですけども有谷さん元々インストール してるある昨日クローン済みそうですね 有谷さんありがとうございますそうそう 今日は有谷さんレベルの人じゃなくて もっともっと初心者の方を対象 にちょっとお話をしております が開きましたらURLのところにですね 今インダーのほうに貼っ付けた URLですねhttpsgithub.comkentaro-h7777inja-ai-content このURLですねコピペしてください コピペです僕もやってみますこの URLをコピペしますはいコピペしました その下にですねローカルパスっていう 欄があると思うんですけどもこれ このままでもいいかなっていう ふうに思います特にこだわりが なければねこのローカルパスっていう のは要はそのGitHubのリモートの ファイルとそれからローカルの フォルダーこの かなというふうに思います 特に こだわりがなければね このローカル パスっていうのは 要はGitHubのリモート のファイルと それからローカル のフォルダー この二地点ですね デポジトリのそのURLが指している ところと 自分のローカルのパス この二地点を同期しますっていう こういう指定なんですね 問題な ければ これクローンボタンでクローン します じゃあクローニングっていう 画面になってクローンしてます よっていう画面の後にはいできました ってなると思います これで終わり です これで今日の仕事終わりですね あとは寝てていただいて大丈夫 です じゃあどこにファイルができ ましたかっていう話をすると ちょっと この画面ね 英語ばっかりで見にくい かなと思うんですけども 真ん中 辺りにですね View the files of your repository in Explorerっていうのがある と思います この右側にShow in Explorer ってありますので このボタンを クリックしてください そうすると ファイルブラウザーっていうか Explorerが開くと思います これが クローンした あなたがクローン したローカルのファイルになります 今 ここに林っていうフォルダが あると思うんですけども この林 っていうフォルダの中に僕はその 持ち起こしファイルをこれから どんどん置いていこうとしている っていう形ですね この林の下の Transcriptsっていうフォルダを作って その下に置こうかなっていうふう に思ってます このリポジトリの 使い方は一番上のですね readme.mdか readme.mdっていうのがあります ので このファイルをクリックして いただくと クリックして開けん って言われたら メモ帳で全然大丈夫 です メモ帳で開けますので メモ帳 で開いていただいたら 説明文を 僕が作った説明文を置いてあります ので これ 読んでいただいたら 使い方 分かれてます 数十行ぐらい のファイルですので すぐ読める と思います こんなところですね 今日お伝えしたかったのもほんと これだけ あとは ここまでいきました ら このGitHubデスクトップの画面 の上に黒いところのタブがある と思うんですけども この一番右側 のタブにFetch Originっていうボタン があると思うんですけどね この Fetch Originっていうボタンをポチッ とすると リモートの状態 最新の 状態が手元のローカルのファイル に反映されると そういう仕組み になってます 自動でやってくれ っていうふうに思われるかもしれない ですけども ちょっと開発者向け のツールっていうところもあって ローカルでが最新のバイバルですね だからそこを ちょっと専門用語 ではマージするとかって言うん ですけども くっつけないといけない です ファイルの状態をくっつけて 最終的にどういう状態にするか っていうところの作業があるので こういうFetch Originっていう わざわざマニュアルで更新する っていうボタンで そこのタイミング とかやり方をコントロールする っていうのがGitHubの特徴になってる ということなんですけども 単純 にファイルが欲しいよってだけの 方は このFetch Originだけポチポチ 毎日 例えば朝にFetch Originボタン をポチッと一回押すと そうする と最新の状態がダウンロードされる っていうことをやればいいだけ になりますので あとはローカル にファイルがありますんで この ローカルのファイルを 例えばどんな AIでもいいですよ Chappyでもいい ですし Cloudさんでもいいですし どんな AIでもいいので 文字起こし されたファイルをポンと投げ込ん で 要約してくださいって言ったら 要約してもらいますし 英語サーチ したかったら 自分の名前でサーチ してくださいってAIにお願いして もいいでしょうし いろいろな使い方 がありますっていう感じですかね あと GitHub Desktopで この上側の黒い タブの一番左の所に カレントリポジトリ っていうのが書いてありますね 一番左の所にカレントリポジトリ っていうのが書いてあって 今 ご 覧いただいてるのはNinja.o-ai-content だと思います Ninja.o-ai-contentですね 複数のリポジトリを扱うようになって くると ここからのそのリポジトリ を選択するというふうな形になる と思いますので このNinja.oの文字 起こしのファイルを更新したい っていう場合は ここのカレントリポジトリ をNinja.o-ai-contentにしていただいて 右側のFetch Originをすると ポチっと 押すと で オッケーです はいっていうことで 皆さんできました でしょうか シャックさん すごい できました ありがとうございます すげえ すげえ すみません 自分で データを置く場合はどうしたら いいんでしたでしょうかということで その場合は ちょっと僕にDMください っていうのは 誰でも彼でも置ける ようにはなってないですので 許可 しただけ このリポジトリのほう にファイルを置けるようにします ので その設定しますので DMでGitHub のアカウント名をお知らせください 僕に そうすると僕が招待します ので シャックさんのほうにメール が行くと思います メールの中に 招待を受けるっていうボタンが 多分あると思いますので それを 押していただいたら このGitHubの リポジトリにシャックさんもファイル を置けるようになりますので よろしく お願いいたしますっていうこと ですね 置き方としては 名前フォルダー を作って シャックさんだったら シャックっていうフォルダーを 作って その下に文字起こしファイル をどんどん置いていくっていう 形でいいかなというふうに思います やっぱり基本的には音声配信も そうですし そこの二次生成物の 文字起こしファイルも その方の 著作物っていうことになります ので その人それぞれ 著作権を 持っている人それぞれにフォルダー 分けして 利用規約とかもしあるん だったら そのフォルダーの下に またreadme.mdを作っていただいて こういうふうな利活用をしていただ いていいですよっていうような 形で置いていくっていうのが そういう 管理がいいのかなという ふうに思っていますって感じですかね すごいシャックさん めっちゃ早い さすがでございます ありがとうございます これもしかして筋トレしながら やりました もしそれだったらすげえ 神業だと思うんですけど はい ということで ありがとうございます ということで非ノンエンジニア のシャックさんもできましたんで もう誰でもできるということを 証明してくださったので 皆さん もぜひやってみてください まだ ちょっとデータがないので ダウンロード しても何も使えない状態になって いるかなと思いますけども これから 毎日ちょっとずつデータがここに アップロードされていく予定です 昨日 僕 おかしいな 夜中に自動で 文字起こししてここに置くっていう 設定してたんですけど 何か動いて なかったんですよね ちょっとまた そこチェックしますけども ということ で でもそれもいつか解決して ちゃんと 文字起こしデータがどんどん アップロードされていくっていう 形になりますので このGitHubディスクトップ ですね 今日はこれだけ設定よろしく お願いいたしますというお話で ございました では ちょっとコメントのほうに 参りますと むけたん ちょっと欲しい あ すげえ 何これ 欲しい これ懐かしの フロッピーディスクですよね フロッピーディスクがデスクトップ になってる ちょっと咳き込んでしまった すげえ これいいですね しかも開く じゃないですか スライド 多分ここですね スライドして 中に時期のディスク が入ってるんですね このスライド したら時期ディスクが見れるんですけ れども そこになんと小物入りが ついているという 素晴らしい 誰 これ こんなん考える世界の人って 面白いですね すごいなあ これは 見てみたいな でもうちね ちょっと 置き場所がないんでね これね 買った よっていう人は ちょっと自慢して ほしい 絶対これ持ってたら人気 者になれるなあ はい むけたん ありがとうございます エマモルさん お母やし 数年前から エバーノート 写真縮小 画像にある 文字を認識して検索できる機能が すごいなって思い それに保存して たんだが 保存がめんどくさくなり できてないということで そう エバーノート 僕も以前は使ってました そう で 自動でOCRしてくれて 文字でね 文字情報を適当で検索できるって ことで 当時 すごい画期的でした よね すげえと思って 僕はエバーノート したんですけども なんだかんだ エバーノート使わなくなっちゃいました ね 今はNotion使ってます エバーノート でも なんか端末数のすごい制限 があったりとか すぐ有料に生成 って出てくるんで もういいかな と思って はい 今 ちょっとエバーノート から離れちゃってますけども でも エバーノートのデータ自体は残って ますね まだクラウド上に 最近の AIはそんなことも当たり前なのかな Googleフォードとかも検索できる ということで AIはそうですね 画像 これポンと入れて この画像読み取ってください っていったら もう今のAIは普通に どんなAIもやってくれると思います ので 当たり前になってきました よね はい ということで でもエバーノート は本当にすごい 今でもすごいアプリ だと思いますんでね っていうような ところですかね そう そう そう だから 音声ファイルを文字起こし したやつを置いとけば それと似た ようなことが音声版でできるっていう 感じですかね テキストで置いて あるんで そこから検索したり AIに読ましたりっていうことが自由 にできますよっていう感じですかね はい マモロさん ありがとうございます それから 朝も夜ものほうに参ります と デミちゃん おはやしです トップ ありがとうございます トップ渡辺でございます で りゅうやさん おはやしです メイリ セールしてたら遅れました ということで 全然遅れてない あ そうか トップ を争ってたって遅れたんですね はい ありがとうございます 8時1分です 全然遅れてないです はい ありがとうございます 非常にマニアックな数名の方がトップ 争いを 熾烈なトップ争いをされている ということで めちゃくちゃ嬉しい です ありがとうございます デモヘちゃん おはやしです ということで 今日も2本 ありがとうございます で よっぴー先生 おはやしございます ということで 今日はフルーツですね ありがとうございます リンゴ イチゴ スイカ パイナップル ということで だいたい好きですね 僕 スイカだけはね ちょっとね あれなんですよ 僕 あんま好きじゃない 食べるんですけどね 食べるんですけど なんていうか味も好き なんですよ だけど種が 種がめんどくさいので 種ごと食べるっていう方もいらっしゃ いるそうですけれども それやったら 種の心配がない他のフルーツを食べる かなっていうところですかね そう わざわざスイカは食べないっていう 感じでございますけど 皆さん いかがでしょうか ということで りゅうやさんの これは取り上げたでしょう それから シャックさんのできましたと これは 勇気づけられましたね ありがとうございます で りゅうやさん シャックさんバイブ コーディングできるし 吸収して 学習する能力もすげてるから できるに 決まってますやんということで でもね そのシャックさんですらバイブ コーディングはね できない できないってずっと言ってましたから できないっていうか なかなか手に つかないなっていうことをおっしゃ ってたんで やっぱりバイブコーディング ってそこそこハードルあるのかな っていう気はしますけど ただ 今回の話はバイブコーディング とは関係ないですので GitHubデスクトップ を入れていただければ あと GitHub のアカウント作成だけしていただけ れば全然大丈夫ということで シャック さんだったらできるし 他の方も できますよということですね でも減っちゃう エヴァノートは 昔作ってたけど どんどん盛り 枠が減って使えなくなってから っていうのも目の前です 僕も しばらくそうでした だから今は ノーション使ってるんですけど そうそう ちょっとごめんなさい 時間が過ぎちゃってるんですけど これもちょっとピックアップしよう かな なんかこの黒山さんっていう 方が ノーションMCPのアップデート がすごいスキルっていうのを取り 上げてくださってるんですけども チャットGPTからページを検索 活用できる クローズのチャット そのままページ化できる カーソル でPRディスタンスやタスク更新ができる すごいですね だからMCP使ったら ノーションの検索だけじゃなくて ノーション側への書き込むとか 更新とかもできますよという感じ ですかね すごい なので 大体カーソル とかでAI使うときはMDファイルで やり取りすることが多いと思うん ですよ だけど ノーションのMCPを使うと もうちょっと高度なことがいろいろ できるっていうような感じになります かね さすがでございます 投稿者 ノーションジャパン 倉山さんが ノーションジャパンの画像を引用 してるって感じですかね 画像か 投稿か ということで 最近はノーション ですね シャックさん見抜かれてる 腹筋とスクワットの間でやって ましたというか 超人かって 超人 ですか すごいですね 腹筋とスクワット の間にGitHubデスクトップの設定 を終えてる人は 僕は多分 初めて 見ましたね 多分 日本人でシャック さんだけじゃないですか そんな ことできるの すげえ むぎたん やっぱり 早稲田さんに刺さった ということで これは刺さるっしょ これはね フロッピーディスク見た ことある人は絶対刺さる 今の人は このフロッピーディスクで多分 知らない方多いと思うんですけども 40代 50代の人間はフロッピーディスク 知ってますんで 絶対刺さりますね これ ありがとうございます シャックさんが ありがとうございます ってなってる シャックさんは仕事 的ですよ 仕事的な人なんでね そう そうなんですけれども はいという ことで シャックさんができました ので 皆さんも追いかけて GitHubデスクトップ だけ今日はインストールまでだけ でも全然大丈夫ですので インストール だけやってもらったら 後で僕の この音声配信を聞いてくださって やっていただけたらいいかなと思います 今日の音声配信も今晩自動で文字 おこしされて GitHubのこっちに来る 予定でございますので 本当か ここ 数日間ずっと失敗してるんで ちょっと自信なくなってきました けども 僕はそれで全自動の仕組み を作ろうと思ってるんですけど なかなかそこまでいかないっていう 感じですかね はい ということで なかなか走りながらでございまして 恐縮でございますけども 皆さん でこうやって一緒に情報収集 情報分析を楽に AIを使って楽に できるような形にしていけたらな というふうに思います はい ということ で終わってまいりますかね では 今日の話もしよかったなと思 いましたら ぜひいいねとフォロー をよろしくお願いいたします では スタッフの皆さま ここで失礼 いたします ご聴取ありがとうございました",
  "filename": "GitHubデスクトップの使い方#955",
  "date": "2025-07-31 08:49:16",
  "source": "https://stand.fm/rss/639bbcf87655e00c1c1430b2",
  "duration": 2230.6,
  "size_mb": 34.53,
  "model": "medium",
  "engine": "openai_api",
  "processed_at": "2025-08-01 05:56:45",
  "processing_time": "230.1s",
  "author": "hayashi",
  "contact": "https://x.com/kabuco_h"
}