{
  "transcript": "おはようございます。林です。技術とお金の専門家のFPがお金やトレンドについて、毎日深掘りしていく番組を林ラジオを始めてまいります。本日は、LOOKさんからボトンを渡しておきましてありがとうございます。コメントは、Discordの朝も夜ものチャンネルにお気軽に入れていただけましたら幸いです。それでは始めてまいりましょう。よろしくお願いいたします。ちょっと雑なんですけど、体調があんまり良くないのか、すごいパワーが出ない、日中眠かったりしますし、花水とかがすごい出て、夏バテですかね、すごい簡単さがあるじゃないですか、部屋はエアコンを聞いていて涼しいんですけど、外で言ったらめちゃくちゃ暑いっていう、この、人間温度試験、製品で、僕は昔もいかだって製品で温度試験ってやるんですけど、めっちゃ温度50度くらいまで上げたりとか、めっちゃ冷やしたりとかして、大丈夫かなってやるのを温度試験ってやるんですけど、人間でそれやってるような感じで、しんどいですね、皆さん体調でお疲れ。ではちょっと、ピン止めですかね、一番右ですね、おしんさんのシヌピトレイが第二弾発売まで重要かという、カウントダウンで、1枚ずつ紹介していくよってやつですね。このおしんさんのリプランに、たくさんの情報が付いておりますので、こちらご覧ください。すごく便利かなと思いましたので、僕もブックマークしました。ということで、よろしくお願いいたします。ぜひ、リツリートとか、引用ポストですね、皆さん応援していただけるとありがたいかなというふうに思います。1日3人やってる感じですかね、そのペースでいっていますので、よろしくお願いいたします。僕も後日、ご紹介に参加する予定です。はい、それから右から2番目ですね、サトルトークンの1000人チャレンジが始まりましたよということで、1ヶ月間ですね。1ヶ月で1000人いけるかなということで、今さっき見たら、僕もこれフォローさせていただいたんですけども、70人、いってたかな。このスクショは69人ですけれども、もう1人増えてましたね。はい、ということで、皆さんもこちら、フォローしてください。無料ですので、とりあえずポツポツにフォローしていけばいいかなというふうに思います。ロード2000結構ハードル上がってきているので、みんなで応援してまいりましょう。それから左から2番目ですね、これ毎日の皆さん、もう投票されましたか?神国投票いたしましょうということですね。こちらにマイント。エルバースのサイトに行って、投票ってやるだけなので、全然簡単なんですけども、Xでシェアしますってやったら、僕この文章編集できないんですよ。何なんですかね、あれ。よく分かんないですけど、パソコンでやってるからかな。なんかXって、僕、なんか相性悪いですね。凍結されたりとか、いろいろありまして。とかAPIがちゃんとつながらなくて、いまだに自動化できてなかったりとかね。本当なんか、Xとはダメですね僕ね。それからオフィスサマーさんの新プレゼント企画ということで、あなただけのミームンキャラを作成いたしますということで、ちょっと詳細をお読みいただきたいんですけども、チャージキャンペーン開始までミームンキルドをフォローしてくださっている方の中から、抽選率1名にオーリーキャラを作成してプレゼントということですごいですね。すごい。これは当たったらめっちゃ盛り上がるやつですね。はい、ということで、こちら。これはフォローはしている。チャージキャンペーン。フォローだけしておけばいいってことですか?なんと。すいません。ちょっと咳き込んでました。はい、ということで皆さんこちらもよろしくお願いいたします。それで、では本題に行きましょうか。メモメモ。ちょっと待ってね。あ、そう。なんかね。そう、そう。なんかね、調子悪いの僕の体調だけじゃなくて、カーソルのも調子悪いんですよ。なんか、皆さんどうですか?カーソル使われている方おられますかね?カーソルって最近すっごいアップデートしてるじゃないですか。なんかすごい勢いでやってて、たぶんね、めちゃくちゃバグが入って、新しい機能とか追加して、めっちゃバグバグしてるんだとも言いますけども、今日はなんとね、もうカーソルのAIが動かなくなってしまって、どうしようかなと思ってるんですけど、まあ、ちょっとファイル編集ができるんで、最悪ファイル編集だけをちょっとしながら、今日はそんな、そうしたいとかなって思って、このままカーソルのAIが使えなかったら、これどうなるんかなって感じですけどね。はい。はい、ということで、今日はタイトル、バイブコーディングを前に進めるテクニック、ということで、まあ、いろいろテクニックがあると思いますし、前も僕テクニックテストをしましょうとかね、いろいろ話をしてたと思うんですけども、今日は、バイブをして、まあ、最初に一番最初に、初心者でバイブコーディングをするときは、わーすごいってなるじゃないですか、こんな日本語の指示、ちょっとするだけで、こんなゲームできちゃったとか、ポモドロタイマーとか、ウェブサイトできちゃった、すごいってなるんですけども、それを何度かやって、もうちょっとコードなものを作ろうと思ったら、必ずみんなハマるポイントっていうのがあって、新しい機能を追加すると、バイブ機能が消えたりとか、使えなくなることってないですか?これ多分あると思うんですよね、あるあるだと思います。で、これを今日はちょっと回避していくテクニックをお伝えしようかなというふうに思っています。で、やることは、まあそうかっていう、当たり前の話なんですけども、皆さんね、バイブコーディングするときは、GitHubっていうものにつながされたと思うんですよ。GitHubなにそれ、分からんけど、とりあえずつなげって言われてるから、つなぐって、あとは知らんみたいな、そんな感じで、使われてると思うんですけども、このGitHubを活用するのがポイントになります。で、GitHubには、僕の話を前さ聞いてくださっている方は、ご存知かなと思うんですけども、Commitっていう機能があります。このCommitっていうのは何かっていうと、言ったらセーブです。ゲームとかね、いろんなシステムで、今の状態をちょっと保存しておきたい、セーブしておきたいってあるじゃないですか。パソコン使う人だったら、ワードファイルをセーブしておきたいって言って、保存とかってやりますよね。昔からこれある保存なんですけども。要はその保存と、ちょっとそれよりは若干ややこしいんですけれども、Commitっていうものが、概念としては一致するというふうなものだと思っておいてください。なので、今ね、例えば新しい機能を追加しようとしているとするじゃないですか。で、追加する前に、とにかくその前に、今動いている状態を必ずCommitしておくってのがポイントになります。これがテクニックですね。テクニックって言えるかどうか話は別なんですけども、ただGitHubをよくわからないなっていう感じで、全部AIがやってくれるし、適当にほったらかして任しとこうっていうふうにやってる人は、おそらくCommitできてないです。AIも気を利かしてCommitしておきますっていうことは、あんまり言ってくれないです。よっぽど気を利かすような、気を利かして動いてくださいっていうプロンポットにしておけば、気が利く場合もあるんですけれども、AIから見たら、今が正しく動いている状態かって、あんまりよくわからずに走ってるので、今じゃあCommitしておきましょうっていうことはあんましないですね。だから、人間側が、じゃあこれちょっと今Commitしておくべきだなって判断して、Commitしておくっていうのがいいと思います。で、次に新しい機能を作るときは、新しいブランチで開発を始めてください。新しいブランチで開発を始める。これが今日のポイント、2つ目のポイントなんです。まずだから動いている状態を、今の状態をCommitします。セーブします。で、セーブした状態で、新しい機能は新しいブランチで始めるんですね。またちょっとブランチとかCommitとか、もうちょっとやめてくださいっていう話になって、やるかもしれないですけども、キーワードとして、この2つのキーワードを知っておくと、めちゃくちゃ、ここから先、いろんな文章が読みやすくなります。至るところで、このブランチだの、Commitだのっていう用語が出てきますので、このブランチって何かって言ったら、要は、リポジトリって箱って話をしたじゃないですか、箱なんですよ。で、その箱っていうのは、いろんなその、何ていうのかな、1個だけの箱じゃなくて、いろいろ別の箱を作れるんですよ。別っていうか、何ていうのかな。何ていうんでしょうね。ツリーとかブランチ、ブランチって枝ですね。枝分かりっていう意味でブランチなんですけども、そういうアナロジーでいくならば、木ですね、ツリーですね。木をちょっと想像してみてほしいんですけども、典型的な木っていうのは、杉の木だったら、大きな木がドーンってあって、枝が生えてますよね、いろんな方向に。その新しい枝を生やすっていうのが、ブランチになります。で、この新しい枝で作業をすると、木に影響が、真ん中のドーンっていう木ですね、には影響を及ぼさないんですね。だからどういうことかっていうと、まず皆さんは多分メインブランチっていう、一番真ん中の幹の太いところで作業をしてて、で、なんならそこだけでずっと作業してると思うんですよ。ブランチとかよくわからんと、とにかくギッドハブ勝手にやってくれっていう、タイプの方は、恐らくそうなってます。で、それだとすごくもったいなくて、というかブランチで、幹から別の枝を生やしてください。そうすると、生やしたところから、新しい箱ができるんですけども、その箱っていうのは、コピーなんですね。その生やした根元があるじゃないですか。そこ根元のコピーになっているので、そこから作業してもいいんですよ、全然。そこから作業して全然よくって。で、そこ上で、例えばぐちゃぐちゃになって、プログラムが動かなくなっても、元に戻れますんで、ちょっと根元まで戻ってくださいと、メインに戻ってくださいって言ったら、元の動く状態が復活しますので、それでOKなんですね。だからそれがコミットしてセーブしてるので、それができるというふうな形になるっていうところですね。新しいブランチ生やすのは、Git Checkout-B新しいブランチ名のCLIですね。これをちょっと覚えておいてください。Git Checkout-B新しいブランチ名ですね。これで新しいブランチができますので、このブランチ上で作業してもらうといいと思います。いいと思いますとか、やってください。今日、今日の動画を見ていただきまして、ちょっと細かいこと分からんっていう方は、AIに指示したらいいと思います。新しいブランチを作ってくださいって言ったら、じゃあブランチ名を教えてくださいってやったら、AIがこのGit Checkout-B新しいブランチ名っていう、CLIをシェルで実行してくれますので、そうすると新しいブランチができます。その前にコミットしてくださいと。だからペアでAIに指示してもいいですね。今の状態で、コミットして新しいブランチを切ってくださいと。発行してくださいって言ったら、まずGit Addっていうのをやります。Git Add、Git Commitってやって、コミットのコメントをちょっと入れないといけないんですけども。まあ、それは何でもいいですね。Work in WIPって入れてもいいですし、今の名前入れてもいいですし、それは何でもいいです。コミットに名前が入るっていうんですね。その後、Git Checkout-Bやったら、Git Checkout-Bでコミットしてくださいと。その後、Git Checkout-Bで新しいブランチを切るという形ですね。これがテクニックです。これはエンジニアの方だったら、みんなやってる話なんですけども、農業エンジニアさんは、多分全然こういった開発のフローっていうのは、分からずにやってる方は結構いらっしゃると思います。特にバイブコーディングから始めました、初めて入りましたっていう方は、おそらくそういう方多いと思いますので、これをやったら絶対いいですね。やってみてください。これがテクニックなんですけれども、もしAIで、ブランチを切りましたと、早稲さんの言うとおりブランチ切ったぞと、そこでAIにこういう新しい機能を追加させようと、頑張ってみましたっていう時に、途中で、なんでその機能、前に付いてた機能が動かなくなったり、無くなったりするのか、動かなくなったりするのかっていうと、AIっていうのは、ユーザーの指示を無視して、ソースを削除するんですよ。平気で。これはユーザーの知らんところでやります。怖いですね。僕も昨日やられました。何がおかしいなと思ったら、消されてましたね、一部ね。そこ消すんかいっていうところを、しれっと消してましたね。じゃあ、どうしましょうと。どうしましょうと。これがちょっと今日のポイントなんですけども、魔法の言葉があって、メインブランチと、○○ブランチですね。今さっき言った新しいブランチのソースを比較して、メインの機能が削除また改変されている部分を指摘してください。このプロンプトを打ってください。もう一度言いますね。メインブランチと今のブランチのソースを比較して、メインの機能が削除または改変されている部分を指摘してください。です。ちょっとコピペしておきましょうか。ちょっと待ってね。さすがに覚えきれないですよね。リスコードにコピペしておきます。はい。これを指示すると、AIが、あ、そっかと思って、メインブランチ、さっきのメインというのはミキのブランチですね。このミキのブランチのことを監修的にメインと呼んでます。このメインブランチと今のブランチですね。さっき言った新しいブランチのソースを比較するんです。比較してくださいとまずね。比較してメインにはあったと。さっきコミットしたメインのソースコードには機能があったんだけれども、今のソースコードには機能があったんだけれども、今のソースコードには削除されてしまっている、あるいは機能が改変されてしまっている部分を、それを探してユーザーにしてくださいという、そういうポロンポトになります。これを一言言ってあげると、あ、そっかそっかとAIがメインブランチと、今の現在のブランチのソースを比較します。これは普通にGitのコマンド、CLIでできるんですね。それを駆使してやってくれて、ソースを比較して、両方のソースを比較して、削除されたところとか、改変された場所っていうのを、抽出することができます。もともとGitっていうのはそういう機能を持ってるんですね。だからそれを使ってAIが、そのCLIを駆使しながらそこを探してくれるので、で、ここが削除されているとか、ここが改変されてますっていうのを、ダーって出してくれます。基本的には、今の今今やろうとしていることは、機能を追加しようとしているっていうことですよね。例えば、なんか既にあるアプリに、新しいページを追加したいとか、っていうふうな、作業しているのに、もうかかわらず、メインのこの部分が消されてますっていうふうに出てきたら、ちょっとゾッとしますよね。なんでそれ消してるの?っていう話になってくるんですよ。で、これが、やっぱりAIは、どういうロジックなのかよくわからないですけども、平気でやらかすんですよね。こっちが指示していないことを、なんかやるんですよ。AIは。よかれと思ってとかやってるとか、AIのロジック上、なんかそういうふうに、勝手に動いちゃうっていうところがあると思うんですけども、文書の中で、こういうのがあるんですけども、そういうのがあるんですけども、文章とかだったら別にいいんですよ。文章だったら、例えば、文章の、こういうものを追記してくださいって言ったら、確かそこは追記されるんだけども、他の部分が、多少なくなったとしても、まあまあ文脈として通ってるし、むしろスッキリするからいいんじゃんみたいな、そんな感じでいいんですけども、プログラムの場合はそうはいかなくて、すべてのコードっていうの意味がある、ちゃんとそこが、そういう、なんていうのかな、そこがないと困るっていうものばっかりなの。で、そういう集合体じゃないですか。だから一部でも消されたら、おかしなことになっちゃうんですね。実際僕のプログラム、トレカアプリですけども、おかしくなって、なんだこれってずっと言ってたんですけども、こういうふうな感じで原因を探したら、削除されてました。重要な機能が削除されて、それは動かんわなってなったので、削除されていることが分かったら、復活してくださいでいいです。あとは簡単ですね。AIに見つけてもらったら、AIがここ消されているっていうのは、もう把握してますので、じゃあその消された部分を復活していくと言ってください。で、ちゃんと復活してくれます。はい。みたいな感じでやると、だいたい動くようになるんじゃないかな、というふうに思いますね。今日の話はこれだけですね。ということで、ちょっと最初から復習しますと、まずGitHubを使いこなすということですね。使いこなすって言っても、そんな難しい話じゃないので、まずコミットしますと。これも全部AIに指示したらいいので、まずコミットしてくださいですね。それから、新しい機能を開発する場合は、新しいブランチ。何するにしようね。機能開発じゃなくて、ソースコードのリファクタリングとかもやるときも、新しいブランチでやったほうがいいです。とにかく何かそのソースコードを開用っていう、一定の単位で開用っていう場合は、新しいブランチでやるっていうのがおすすめです。それがGitCheckout-B新しいブランチですね。この辺も覚える必要なくて、AIにコミットして新しいブランチ切ってくださいって言ったら、やってくれますので、っていうことですね。新しいブランチで、今だったら新しい機能を開発を進めていく中で、なんかちょっとおかしいなというふうなことが出てきたら、Discordのほうにコピーペースしてますけれども、メインブランチとゲームブランチのソースを比較して、メインの機能、また削除、開閉されている部分を指摘してくださいと。抽出してくださいっていうふうに指示をすると、見てくれます。診断してくれるって感じですね。なので、削除、開閉されているところを、メインブランチの状態に、元に戻すっていう感じですね。さっきセーブした、コミットした状態に、元に戻すというような感じでいけますので、これで大丈夫です。あ、そう。最後にですね、新しい機能を全部追加できましたと。で、晴れて無事、全機能、元の機能も含めて、全機能がヘルシーに動いていますっていうふうな状態になったら、メインブランチにマージしてくださいまでやってください。これはちょっと、メインにマージするかどうかっていうのは、ポリシー次第なんですけども、おそらく、多分バイブコーディングやってる方は、一人でやっていると思いますので、基本的には、どんどんメインにマージしていくでいいと思います。あの、幹ですね。元の幹に新しい枝を生やしてるんですか。で、正常ですと。正常に成長しましたってなったら、その枝の状態を幹に戻すっていう感じですね。幹の方にマージする。マージって、統合なんですけども、統合していって、メインのソース側で、ちゃんと新しい機能も含めて動くようにするっていう感じですね。それもAIに指示したら、メインにマージしてください。このブランチをメインにマージしてくださいっていったら、いけますので、それでいいかなというふうに思います。はい、ということで、今日の話はこんな感じですかね。ちょっとテクニカルな話で恐縮でしたけども、バイブコーディングやっている人は、ちょっと参考にしてみてください。はい、それから、コメントの方に参りましょう。ムゲタン。お?脱線しますが懐かしいやつを見つけましたと。金曜ロードショーのプラモに、Bluetoothスピーカー仕込んで、これ単体で0のテーマが流せるようになりました。あ、今ちょっと聞こえないですね。あ、でもなんかよさそう。へぇー。あ、こんなプラモあるんだ。すげぇ。へぇー。これなんかあったらちょっと、ちょっと熱いですね。金曜ロードショーのあの、えっと、なんすっけ。あ、出ない。あ、出ない。出てこない。熱いとか言いながら出てこないわ。そう。いや、でもいいですね。ありがとうございます。鼻水がね、すいません、出てくるんですよ。ちょっと待ってね。鼻水かも。すいません。あれっすかね、軽く風をひいてるかもしれんですね。中年舞台ですね。はい。で、まぼるさんお母やし、ランスエイト、GitHub活用か、聞くだけ状態です。ということで、すいません。ちょっとややこしい話で。あ、でも今日の話は、話ややこしく聞こえたかもしれないですけども、今だったらもうAIがやってくれますんで、昔はそのユーザーがちゃんとGitHubのコマンドとか使い方を覚えて、自分でやらないといけなかったんですけども、もう今は本当に楽チンな時代ですね。AIでGitHubこうやってやってくださいってやったら全部やってくれるんで。はい。使う前にコミットをセーブ。AIも現在地不明化。ブランチ枝分かれさせる。色々。宝箱。すごい、いい表現ですね。新しい枝を作る。息は大事ということで。GitHub生まれば新しい枝を作って、最後は張ってたんで。すいません。すいません。そう、AIで全部できますし、あとね、そうそうそう。GitHubで文字起こしファイルを共有しようって話してたじゃないですか。で、あれをやってます。ちょっと待ってね。ちょっとチェックしよう。シャックさんがね、多分設定だけ終わってそこから進んでないと思うんですけども。僕は、僕の林の下のTranscriptsっていうフォルダの下に、毎日の文字起こしのファイルが自動で生成されるようにしてます。機能かな。うん。8月2日の僕のこのスペースですね。の文字起こしファイルがちゃんとできてます。次の日の夜中の1時に文字起こし開始するようにしてるんですよ。で、今見たら、1時に開始で、1時43分に書き込んでるので、大体そうですね、リアルタイムぐらいで変換が終了してます。43分かけて文字起こしして、それを置いているっていう形ですね。いい感じですね。これちゃんと回るようになってきた。なので、例えば今日の僕の話は、明日になったら自動で文字起こしして、このGitHubに入っていく形になりますし、昨日、ディスコードの方に確かシェアしたと思うんですけど、Google Driveですね。もう一回シェアしておきましょうか。ちょっと待ってね。GitHubと、GitHubと、違う。まず、ちょっと待ってくださいね。コンテンツ。あったあった。これなの。まず、これなの。Google Driveで共有。まず、これGoogle Driveでしょ。GitHubの方は、 まずこれをGoogle Driveでしょ。GitHubの方は、GitHubは、インダオの、GitHubの方は、GitHubの方は、GitHubの方は、GitHubの方は、Google Driveのリンクを開いてください。僕のファイルが見えているはずです。シャックさんも作っていただいているので、シャックさんも今お忙しいかなと思うので、落ち着いてきたらシャックさんもこれをやってくださるんじゃないかと期待しておりますので、期待していい。僕のファイルはJSONファイルで作っていますので、メモ帳でも開けますし、JSONファイルをAIに加わせるとAIの分析がはかどりますので、ご視聴ありがとうございました。ご視聴ありがとうございました。僕は、血管が太いです。太いというか、浮いているんですね。だから、必ずここにプスって刺される場所が決まっているんですね。ここは取りますね。熱中症などから、ハヤシタンを代わってください。ありがとうございます。体力を消耗している感じですね。ちょっと体力を復活させます。ヨッピー先生、あららゆっくりお話になってください。ありがとうございます。JSON、ハヤシです。ホイッシュタンもサン、おはようございます。ということで、ありがとうございます。夏は室内外で温度差が大きいですし、冷たいものを飲んだり食べたりすることが多いから、体調を崩しやすいですよね。どうか大事にしてください。本当にありがとうございます。今日の動画が足りていないのかな?もっと体力をつけたいんですけどね。おはやしタンデスンデレ、ありがとうございます。新しいパターンですね。すごい下カンマ。ありがとうございます。おはやしです。遅刻しました。おはやしです。ありがとうございます。フォローだけで大丈夫です。フォローだけでこんな豪華なサービスが当選するかも。本当にありがとうございます。おはやしです。ありがとうございます。おはやしです。ありがとうございます。木破さん、おはやしです。無下駄、そんな速さにはこちらがある。おう。すごい。無下駄、こういうのをすっごい知ってますよね。どこを押すの?親指の付け根のところですか?これを、表と裏からギュッと押すと。え?風の回復を流す。痛みの番の図、肩こり。ここ?え?右手が左手かってなるんですか?押したらすごい凝ってる。押すと気持ちいいですね。もう、白く自治を押しておきます。ルヤさん、軽く宣伝だけしてもいいですか?ちょっと分かんないですけども。僕分かんないですけども。いいんじゃないですか?ありがとうございます。時間も経ってきましたので、ぼちぼち終わっていきたいと思います。お前、違う。終わりなんです。ということで、今日の話面白かったなと思いましたら、ちょっと難しかったかもしれないですけども、また文字起こししておきますので、僕がEIで文章にまとめて、またXとかに投稿しておきたいと思います。はい、ということでスタイフの皆さま、ここで失礼いたします。ご聴取ありがとうございました。",
  "filename": "バイブコーディングを前に進めるテクニック#959",
  "date": "2025-08-03 10:01:55",
  "source": "https://stand.fm/rss/639bbcf87655e00c1c1430b2",
  "duration": 1952.7,
  "size_mb": 30.23,
  "model": "medium",
  "engine": "local_whisper",
  "processed_at": "2025-08-04 01:00:09",
  "processing_time": "2911.1s",
  "author": "hayashi",
  "contact": "https://x.com/kabuco_h"
}